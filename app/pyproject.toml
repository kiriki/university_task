[tool.poetry]
name = "university_task"
version = "0.0.1"
description = ""
authors = ["Kirill Che <kiriciri@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.96.1"
uvicorn = "^0.22.0"
sqlalchemy = "^2.0.16"
psycopg2-binary = "^2.9.6"
pydantic = { extras = ["dotenv"], version = "^1.10.9" }

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.2"

[tool.isort]
#https://pycqa.github.io/isort/index.html
profile = "pycharm"
known_local_folder = ["api", "db", "—Åore", "schemas"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
line_length = 120
case_sensitive = true
lines_after_imports = -1
include_trailing_comma = true
ensure_newline_before_comments = false
force_grid_wrap = 0

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.ruff]
fixable = ["Q", "UP", "SIM", "PT", "ANN", "RET", "PLR"]
line-length = 120

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.flake8-builtins]
builtins-ignorelist = ["id", "__name__"]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Header"]

[tool.ruff.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "sqlalchemy.orm.declared_attr",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
